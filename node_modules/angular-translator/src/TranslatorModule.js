var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { TranslateComponent } from "./TranslateComponent";
import { TranslateLogHandler } from "./TranslateLogHandler";
import { TranslatePipe } from "./TranslatePipe";
import { TranslationLoaderJson } from "./TranslationLoader/Json";
import { Translator } from "./Translator";
import { COMMON_PURE_PIPES, TranslatorConfig } from "./TranslatorConfig";
import { TranslatorContainer } from "./TranslatorContainer";
import { HttpClientModule } from "@angular/common/http";
import { InjectionToken, NgModule } from "@angular/core";
export var TRANSLATOR_OPTIONS = new InjectionToken("TRANSLATOR_OPTIONS");
export var TRANSLATOR_MODULE = new InjectionToken("TRANSLATOR_MODULE");
var TranslatorModule = /** @class */ (function () {
    function TranslatorModule() {
    }
    TranslatorModule_1 = TranslatorModule;
    TranslatorModule.forRoot = function (options, module) {
        if (options === void 0) { options = {}; }
        if (module === void 0) { module = "default"; }
        return {
            ngModule: TranslatorModule_1,
            providers: [
                { provide: TRANSLATOR_OPTIONS, useValue: options },
                {
                    provide: TranslatorConfig, useFactory: createTranslatorConfig, deps: [
                        TranslateLogHandler,
                        TRANSLATOR_OPTIONS,
                    ],
                },
                provideTranslator(module),
                options.pipes || [],
            ],
        };
    };
    var TranslatorModule_1;
    TranslatorModule = TranslatorModule_1 = __decorate([
        NgModule({
            declarations: [
                TranslatePipe,
                TranslateComponent,
            ],
            exports: [
                TranslatePipe,
                TranslateComponent,
            ],
            imports: [HttpClientModule],
            providers: [
                TranslationLoaderJson,
                TranslateLogHandler,
                TranslatorContainer,
                COMMON_PURE_PIPES,
            ],
        })
    ], TranslatorModule);
    return TranslatorModule;
}());
export { TranslatorModule };
export function provideTranslator(module) {
    return [
        { provide: TRANSLATOR_MODULE, useValue: module },
        { provide: Translator, useFactory: createTranslator, deps: [TranslatorContainer, TRANSLATOR_MODULE] },
    ];
}
export function createTranslatorConfig(logHandler, options) {
    if (options === void 0) { options = {}; }
    return new TranslatorConfig(logHandler, options);
}
export function createTranslator(translatorContainer, module) {
    return translatorContainer.getTranslator(module);
}
//# sourceMappingURL=TranslatorModule.js.map