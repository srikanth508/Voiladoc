var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { TranslationLoader } from "../TranslationLoader";
import { HttpClient } from "@angular/common/http";
import { Injectable } from "@angular/core";
var TranslationLoaderJson = /** @class */ (function (_super) {
    __extends(TranslationLoaderJson, _super);
    function TranslationLoaderJson(http) {
        var _this = _super.call(this) || this;
        _this.http = http;
        return _this;
    }
    TranslationLoaderJson.prototype.load = function (_a) {
        var _this = this;
        var language = _a.language, _b = _a.module, module = _b === void 0 ? "default" : _b, _c = _a.path, path = _c === void 0 ? "assets/i18n/{{ module }}/{{ language }}.json" : _c;
        return new Promise(function (resolve, reject) {
            var file = path.replace(/\{\{\s*([a-z]+)\s*\}\}/g, function (substring) {
                var args = [];
                for (var _i = 1; _i < arguments.length; _i++) {
                    args[_i - 1] = arguments[_i];
                }
                switch (args[0]) {
                    case "language":
                        return language;
                    case "module":
                        return module !== "default" ? module : ".";
                }
            });
            _this.http.get(file)
                .subscribe(function (data) {
                var translations = {};
                _this.flattenTranslations(translations, data);
                resolve(translations);
            }, function (response) {
                reject(response.statusText);
            });
        });
    };
    TranslationLoaderJson = __decorate([
        Injectable(),
        __metadata("design:paramtypes", [HttpClient])
    ], TranslationLoaderJson);
    return TranslationLoaderJson;
}(TranslationLoader));
export { TranslationLoaderJson };
//# sourceMappingURL=Json.js.map